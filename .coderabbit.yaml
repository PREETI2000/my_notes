language: en-US
tone_instructions: ''
early_access: false
enable_free_tier: true
reviews:
  profile: strict
  request_changes_workflow: false
  high_level_summary: false
  high_level_summary_placeholder: '@coderabbitai summary'
  auto_title_placeholder: '@coderabbitai'
  review_status: true
  commit_status: true
  poem: true
  collapse_walkthrough: false
  sequence_diagrams: true
  changed_files_summary: true
  labeling_instructions: []
  path_filters: []
  path_instructions: 
  - paths: ["notes/views/*.py"]
      instructions: |
        - Ensure all functions have proper docstrings.
        - Verify that variable names are descriptive.
  - paths: ["notes/views/*.py"]
      instructions: |
        - check all places where there are syntax error 
        - predict the future code failure and comment on the code.
  - paths: ["tests/**/*.py"]
      instructions: |
        - Check that all test cases cover edge scenarios.
        - Make sure mocking is used appropriately.
  review_instructions:
  - paths: ["**/*.py"]
    instructions: |
      - Ensure all code follows PEP 8 style guidelines.
      - Verify that imports are organized and unnecessary imports are removed.
      - Check for proper use of Django models, views.
      - Ensure that database queries are optimized and use Django ORM effectively.
      - Validate that all user inputs are properly sanitized to prevent security vulnerabilities like SQL injection and XSS attacks.
      - Confirm that default values and null constraints are appropriately set in models.
      - Review the use of Django's built-in authentication and authorization mechanisms.
      - Ensure middleware is appropriately used and configured.
      - Check for proper error handling and logging practices.
      - Verify that static and media files are correctly managed.
      -Verify the proper use of asynchronous tasks with Celery or other task queues.
      - Review REST API endpoints for correct usage of Django REST Framework serializers and viewsets.
  abort_on_close: true
  auto_review:
    enabled: true
    auto_incremental_review: true
    ignore_title_keywords: []
    labels: []
    drafts: false
    base_branches: []
  tools:
    shellcheck:
      enabled: true
    ruff:
      enabled: false
    markdownlint:
      enabled: true
    github-checks:
      enabled: true
      timeout_ms: 90000
    languagetool:
      enabled: true
      enabled_only: false
      level: default
    biome:
      enabled: true
    hadolint:
      enabled: true
    swiftlint:
      enabled: true
    phpstan:
      enabled: true
      level: default
    golangci-lint:
      enabled: true
    yamllint:
      enabled: true
    gitleaks:
      enabled: true
    checkov:
      enabled: true
    detekt:
      enabled: true
    eslint:
      enabled: true
    rubocop:
      enabled: true
    buf:
      enabled: true
    regal:
      enabled: true
    actionlint:
      enabled: true
    pmd:
      enabled: true
    cppcheck:
      enabled: true
    semgrep:
      enabled: true
    circleci:
      enabled: true
chat:
  auto_reply: true
knowledge_base:
  opt_out: false
  learnings:
    scope: auto
  issues:
    scope: auto
  jira:
    project_keys: []
  linear:
    team_keys: []
  pull_requests:
    scope: auto

