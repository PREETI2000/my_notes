
# config.yaml for CodeRabbit
project:
  name: django_project

language:
  - python

framework:
  - django

# Define rules for Django-specific best practices
rules:
  # Check for missing migrations
  - id: check-missing-migrations
    message: "Ensure migrations are created after model changes."
    rule:
      regex: "makemigrations"
      kind: command
      severity: warning

  # Check for hardcoded secrets
  - id: check-hardcoded-secrets
    message: "Avoid hardcoding sensitive information in settings. Use environment variables."
    rule:
      regex: "SECRET_KEY\s*=\s*[\"\'][^\"\']*[\"\']"
      kind: assignment
      severity: error

  # Ensure CSRF middleware is present in the settings
  - id: check-csrf-middleware
    message: "CSRF middleware should be included in settings."
    rule:
      regex: "MIDDLEWARE\s*=\s*\[.*\'django.middleware.csrf.CsrfViewMiddleware\'.*\]"
      kind: list
      severity: error

  # Validate URLs with proper namespace
  - id: check-url-namespace
    message: "Ensure each URL pattern has a namespace."
    rule:
      regex: "url\(.*, namespace="
      kind: call_expression
      severity: warning

  # Enforce model Meta class usage
  - id: check-model-meta
    message: "Django models should have a Meta class to define database-related options."
    rule:
      regex: "class Meta"
      kind: class_body
      severity: info

  # Detect usage of print statements (to avoid in production)
  - id: detect-print-statements
    message: "Avoid using print statements in Django applications."
    rule:
      regex: "print\("
      kind: call_expression
      severity: warning

  # Ensure proper form validation in views
  - id: check-form-validation
    message: "Form validation should be handled correctly."
    rule:
      regex: "\.is_valid\(\)"
      kind: call_expression
      severity: error

  # Warn against using '*' in imports
  - id: avoid-star-import
    message: "Avoid using '*' in imports."
    rule:
      regex: "from\s+\S+\s+import\s+\*"
      kind: import_statement
      severity: warning

# Custom settings for CodeRabbit to enforce Django project structure and best practices
project_structure:
  - path: "app/"
    description: "Django apps should reside in the app/ directory."
    severity: error

  - path: "templates/"
    description: "HTML templates should be organized in the templates/ directory."
    severity: warning

  - path: "static/"
    description: "Static files (CSS, JS) should be in the static/ directory."
    severity: info

# Additional best practices
best_practices:
  - id: use-environment-variables
    message: "Environment variables should be used for sensitive data like the database URL, secret key, etc."
    severity: error
    suggested_fix: "Use os.getenv() to retrieve values from environment variables."

  - id: use-debug-false
    message: "DEBUG mode should be set to False in production."
    severity: error
    suggested_fix: "Ensure DEBUG=False in production settings."

  - id: use-static-root
    message: "STATIC_ROOT must be set for collecting static files in production."
    severity: error
    suggested_fix: "Set STATIC_ROOT in settings.py."

  - id: use-aliases-for-urls
    message: "Use reverse() or {% url %} template tag instead of hardcoding URLs."
    severity: warning
    suggested_fix: "Refactor code to use Django's reverse() function or {% url %} in templates."
